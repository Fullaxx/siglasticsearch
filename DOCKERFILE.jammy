#Jason Barnett - xasmodeanx@gmail.com
#
#Set up an Ubuntu 22.04 container and install elasticsearch and kibana inside of it.  
#Use supervisord to manage.  Provide templates for indexes, policies, passwordless login and anonymous access.
#
# BUILDING:	docker build -t siglasticsearch-image .
# INSTANTIATING:	docker run --name siglasticsearch --net host -h siglasticsearch -d --restart-always --cap-add SYS_TIME --memory 4G -p 9200:9200 -p 5601:5601 --ulimit nofile=65535:65535 -e "bootstrap.memory_lock=true" --ulimit memlock=-1:-1 -e "discovery.type=single-node" siglasticsearch-image
# DEBUGGING: 	docker container exec -it siglasticsearch /bin/bash
# ACCESSING:    http://localhost:5601/kibana

FROM ubuntu:22.04 AS build

MAINTAINER Jason Barnett <xasmodeanx@gmail.com>

ARG DEBIAN_FRONTEND=noninteractive

#Start with an up-to-date basis
RUN apt-get update; apt-get upgrade -y

#Install some useful tools
RUN apt-get install -y bash supervisor curl net-tools nano apt-transport-https wget bc gpg

#Copy in our files...
COPY overlay /

#################################################
#Install Elasticsearch and Kibana	            	#
#################################################
#Elastic 7.x repo setup
RUN curl -fsSL https://artifacts.elastic.co/GPG-KEY-elasticsearch | gpg --dearmor -o /usr/share/keyrings/elastic.gpg
RUN echo "deb [signed-by=/usr/share/keyrings/elastic.gpg] https://artifacts.elastic.co/packages/7.x/apt stable main" | tee -a /etc/apt/sources.list.d/elastic-7.x.list
#Elastic 8.x repo setup
#RUN wget -qO - https://artifacts.elastic.co/GPG-KEY-elasticsearch | gpg --dearmor -o /usr/share/keyrings/elasticsearch-keyring.gpg
#RUN echo "deb [signed-by=/usr/share/keyrings/elasticsearch-keyring.gpg] https://artifacts.elastic.co/packages/8.x/apt stable main" | tee /etc/apt/sources.list.d/elastic-8.x.list
RUN apt-get update
RUN apt-get install -y elasticsearch kibana
#Optional: install filebeat and logstash
#RUN apt-get install -y filebeat logstash
#Use pre-configured settings for elasticsearch and kibana
RUN rm -fv /etc/elasticsearch/elasticsearch.yml; mkdir -p /usr/share/elasticsearch/config/; cp -fv /elasticsearch/elasticsearch.yml /usr/share/elasticsearch/config/; ln -sfv /usr/share/elasticsearch/config/elasticsearch.yml /etc/elasticsearch/elasticsearch.yml; mkdir -p /usr/share/elasticsearch/data; chown -R elasticsearch:elasticsearch /usr/share/elasticsearch
RUN rm -fv /etc/kibana/kibana.yml; mkdir -p /usr/share/kibana/config/; cp /kibana/kibana.yml /usr/share/kibana/config/; ln -sfv /usr/share/kibana/config/kibana.yml /etc/kibana/kibana.yml


#################################################
#Clean up			                              		#
#################################################
RUN rm -rf /var/lib/apt/lists/*
RUN apt-get clean


#################################################
#Shrink image down			                      	#
#################################################
FROM ubuntu:22.04 
COPY --from=build ./ /

#################################################
#Healthcheck                                    #
#################################################
#If elastic and kibana are up and running, mark container as healthy
HEALTHCHECK CMD /healthcheck.sh

#################################################
#Open ports                                    #
#################################################
#   9200 - elastic API,
#		9300 - elastic to elastic comms (must be secured, it is not by default),
#		80 - Kibana (http), 
#		5601 - Kibana (http), 
#		443 - Kibana (https)
EXPOSE 9200 80 443 5601
#EXPOSE 9300 #DO NOT EXPOSE THIS PORT WITHOUT LICENSING AND SECURING



#Run supervisor at instantiation time, processes will be controlled by supervisor in /etc/supervisor/supervisord.conf
#/usr/bin/python3 /usr/bin/supervisord -c /etc/supervisor/supervisord.conf
CMD ["/usr/bin/python3", "/usr/bin/supervisord", "-c", "/etc/supervisor/supervisord.conf"]
